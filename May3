#define LDRpin A0 // pin where we connected the LDR and the resistor
/* ARDUINO LINE FOLLOWER CODE
 * Bahar, Tina, Jaclyn
 * Mr.Wong - TEJ4M3
 * May 3, 2019 - June 11, 2019
 * Changes are to be logged on Github
 * This code is for an Arduino Uno chip to follow a track made with black electrical tape
 */

// GLOBAL VARIABLES

int in1 = 13;
int in2 = 12;

// Motor B
int in3 = 8;
int in4 = 7;

// PWM
int aSpeed = 6;
int bSpeed = 5;

// LDR (Orientation)
int orientationLDR = A0;

//LED Light
int led = 4;
//value for white
int white=0;

// timers
// time past since robot's seen white
unsigned int timePast = 0;
// last time robot has seen black
unsigned int lastTime = 0;
// timer used to measure how long robot's seen black
unsigned int temp=0;

// SETUP
void setup() {
  Serial.begin(9600); //sets serial port for communication
  // PWM Pins
  pinMode(aSpeed, OUTPUT);
  pinMode(bSpeed, OUTPUT);
  // Motor direction control
  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(in3, OUTPUT);
  pinMode(in4, OUTPUT);
  //LED
  pinMode (led, OUTPUT);
  // LDR Calibration
  pinMode(orientationLDR, INPUT);
  // LDRbn 
  pinMode(A0, INPUT);
  // turn on led, set up what numbers are black and white
  digitalWrite(led, HIGH);
}

// GETTER METHODS

// prints LDR output on serial monitor
void getLDR(){
  Serial.println(analogRead(LDRpin));
}

// checks to see what colour (black or white) is in front of it
// outputs 0 for white, 1 for black
boolean checkEdge(){
  if (analogRead(LDRpin) < 400) {
    return 1;
  }
  return 0;
}

// MOVEMENT

// moves car left if senses black
void moveLeft(){
   // Turn on motor A
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  // Turn on motor B
  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
  // Set speed to 200 out of possible range 0~255
  analogWrite(aSpeed, 70);//80
  // Set speed to 200 out of possible range 0~255
  analogWrite(bSpeed, 90);//105
}

// moves car left more if senses black for a long time (indicating 90, 30, or 45 degree turn)
void moveLeftMore(){
   // Turn on motor A
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  // Turn on motor B
  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
  // Set speed to 200 out of possible range 0~255
  analogWrite(aSpeed, 140);//150
  // Set speed to 200 out of possible range 0~255
  analogWrite(bSpeed, 70);//80
}

// turn car right until edge is found
void moveRight(){
  // turns right until edge is found (for short period of time on white)
  if (timePast<1400){
    // Turn on motor A
    digitalWrite(in1, LOW);
    digitalWrite(in2, HIGH);
    // Turn on motor B
    digitalWrite(in3, HIGH);
    digitalWrite(in4, LOW);
    // Set speed to 200 out of possible range 0~255
    analogWrite(aSpeed, 130);//100
    // Set speed to 200 out of possible range 0~255
    analogWrite(bSpeed, 1);
  }
  else{       // if it's white for a long time, the path may be an L shape and the car has to turn on its own axis (both wheels move opposite sides)
    // Turn on motor A
    digitalWrite(in1, HIGH);
    digitalWrite(in2, LOW);
    // Turn on motor B
    digitalWrite(in3, HIGH);
    digitalWrite(in4, LOW);
    // Set speed to 200 out of possible range 0~255
    analogWrite(aSpeed, 70);//70
    // Set speed to 200 out of possible range 0~255
    analogWrite(bSpeed, 120);//70
  }
}

// MAIN 
void loop() {
  if (checkEdge()){
    lastTime = millis();
    // move left for at least half a second so it can find black tape that's not on straight path and not miss it
    temp=millis();
    // if robot sees black for a short amount of time it will turn left and forward
    while (temp-lastTime<600){
      moveLeft();
      temp=millis();
    }
    // if robot sees black for long amount of time, it is a turn on the arrow/ 90 degree turn so robot will have a sharper left turn
    if (checkEdge()){
      lastTime = millis();
      temp = millis();
      while (temp - lastTime<850)
      {
        moveLeftMore();
        temp=millis();
      }
    }
    timePast = 0;
    lastTime = millis();
  }
  // if sees white, robot will move right
  else{
    moveRight();
    timePast = millis()-lastTime;
  }
}
